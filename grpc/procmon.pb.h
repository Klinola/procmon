// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: procmon.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_procmon_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_procmon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_procmon_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_procmon_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_procmon_2eproto;
namespace procmon {
class NftTraffic;
struct NftTrafficDefaultTypeInternal;
extern NftTrafficDefaultTypeInternal _NftTraffic_default_instance_;
class NftTrafficRequest;
struct NftTrafficRequestDefaultTypeInternal;
extern NftTrafficRequestDefaultTypeInternal _NftTrafficRequest_default_instance_;
class NftTrafficResponse;
struct NftTrafficResponseDefaultTypeInternal;
extern NftTrafficResponseDefaultTypeInternal _NftTrafficResponse_default_instance_;
class StatusRequest;
struct StatusRequestDefaultTypeInternal;
extern StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;
class StatusResponse;
struct StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
}  // namespace procmon
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace procmon {

// ===================================================================


// -------------------------------------------------------------------

class StatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:procmon.StatusResponse) */ {
 public:
  inline StatusResponse() : StatusResponse(nullptr) {}
  ~StatusResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StatusResponse(const StatusResponse& from) : StatusResponse(nullptr, from) {}
  inline StatusResponse(StatusResponse&& from) noexcept
      : StatusResponse(nullptr, std::move(from)) {}
  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
        &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StatusResponse& a, StatusResponse& b) { a.Swap(&b); }
  inline void Swap(StatusResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StatusResponse& from) { StatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StatusResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "procmon.StatusResponse"; }

 protected:
  explicit StatusResponse(::google::protobuf::Arena* arena);
  StatusResponse(::google::protobuf::Arena* arena, const StatusResponse& from);
  StatusResponse(::google::protobuf::Arena* arena, StatusResponse&& from) noexcept
      : StatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNetInterfaceFieldNumber = 5,
    kCpuUsageFieldNumber = 1,
    kMemUsageFieldNumber = 2,
    kTotalMemoryFieldNumber = 3,
    kFreeMemoryFieldNumber = 4,
    kRxBytesFieldNumber = 6,
    kTxBytesFieldNumber = 7,
    kDSpeedFieldNumber = 8,
    kUSpeedFieldNumber = 9,
  };
  // string net_interface = 5;
  void clear_net_interface() ;
  const std::string& net_interface() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_net_interface(Arg_&& arg, Args_... args);
  std::string* mutable_net_interface();
  PROTOBUF_NODISCARD std::string* release_net_interface();
  void set_allocated_net_interface(std::string* value);

  private:
  const std::string& _internal_net_interface() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_net_interface(
      const std::string& value);
  std::string* _internal_mutable_net_interface();

  public:
  // double cpu_usage = 1;
  void clear_cpu_usage() ;
  double cpu_usage() const;
  void set_cpu_usage(double value);

  private:
  double _internal_cpu_usage() const;
  void _internal_set_cpu_usage(double value);

  public:
  // double mem_usage = 2;
  void clear_mem_usage() ;
  double mem_usage() const;
  void set_mem_usage(double value);

  private:
  double _internal_mem_usage() const;
  void _internal_set_mem_usage(double value);

  public:
  // double total_memory = 3;
  void clear_total_memory() ;
  double total_memory() const;
  void set_total_memory(double value);

  private:
  double _internal_total_memory() const;
  void _internal_set_total_memory(double value);

  public:
  // double free_memory = 4;
  void clear_free_memory() ;
  double free_memory() const;
  void set_free_memory(double value);

  private:
  double _internal_free_memory() const;
  void _internal_set_free_memory(double value);

  public:
  // int64 rx_bytes = 6;
  void clear_rx_bytes() ;
  ::int64_t rx_bytes() const;
  void set_rx_bytes(::int64_t value);

  private:
  ::int64_t _internal_rx_bytes() const;
  void _internal_set_rx_bytes(::int64_t value);

  public:
  // int64 tx_bytes = 7;
  void clear_tx_bytes() ;
  ::int64_t tx_bytes() const;
  void set_tx_bytes(::int64_t value);

  private:
  ::int64_t _internal_tx_bytes() const;
  void _internal_set_tx_bytes(::int64_t value);

  public:
  // double d_speed = 8;
  void clear_d_speed() ;
  double d_speed() const;
  void set_d_speed(double value);

  private:
  double _internal_d_speed() const;
  void _internal_set_d_speed(double value);

  public:
  // double u_speed = 9;
  void clear_u_speed() ;
  double u_speed() const;
  void set_u_speed(double value);

  private:
  double _internal_u_speed() const;
  void _internal_set_u_speed(double value);

  public:
  // @@protoc_insertion_point(class_scope:procmon.StatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StatusResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StatusResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr net_interface_;
    double cpu_usage_;
    double mem_usage_;
    double total_memory_;
    double free_memory_;
    ::int64_t rx_bytes_;
    ::int64_t tx_bytes_;
    double d_speed_;
    double u_speed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_procmon_2eproto;
};
// -------------------------------------------------------------------

class StatusRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:procmon.StatusRequest) */ {
 public:
  inline StatusRequest() : StatusRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StatusRequest(const StatusRequest& from) : StatusRequest(nullptr, from) {}
  inline StatusRequest(StatusRequest&& from) noexcept
      : StatusRequest(nullptr, std::move(from)) {}
  inline StatusRequest& operator=(const StatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusRequest& operator=(StatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StatusRequest* internal_default_instance() {
    return reinterpret_cast<const StatusRequest*>(
        &_StatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StatusRequest& a, StatusRequest& b) { a.Swap(&b); }
  inline void Swap(StatusRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "procmon.StatusRequest"; }

 protected:
  explicit StatusRequest(::google::protobuf::Arena* arena);
  StatusRequest(::google::protobuf::Arena* arena, const StatusRequest& from);
  StatusRequest(::google::protobuf::Arena* arena, StatusRequest&& from) noexcept
      : StatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:procmon.StatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StatusRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StatusRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_procmon_2eproto;
};
// -------------------------------------------------------------------

class NftTrafficRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:procmon.NftTrafficRequest) */ {
 public:
  inline NftTrafficRequest() : NftTrafficRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NftTrafficRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NftTrafficRequest(const NftTrafficRequest& from) : NftTrafficRequest(nullptr, from) {}
  inline NftTrafficRequest(NftTrafficRequest&& from) noexcept
      : NftTrafficRequest(nullptr, std::move(from)) {}
  inline NftTrafficRequest& operator=(const NftTrafficRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NftTrafficRequest& operator=(NftTrafficRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NftTrafficRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NftTrafficRequest* internal_default_instance() {
    return reinterpret_cast<const NftTrafficRequest*>(
        &_NftTrafficRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(NftTrafficRequest& a, NftTrafficRequest& b) { a.Swap(&b); }
  inline void Swap(NftTrafficRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NftTrafficRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NftTrafficRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<NftTrafficRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NftTrafficRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NftTrafficRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "procmon.NftTrafficRequest"; }

 protected:
  explicit NftTrafficRequest(::google::protobuf::Arena* arena);
  NftTrafficRequest(::google::protobuf::Arena* arena, const NftTrafficRequest& from);
  NftTrafficRequest(::google::protobuf::Arena* arena, NftTrafficRequest&& from) noexcept
      : NftTrafficRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:procmon.NftTrafficRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NftTrafficRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NftTrafficRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_procmon_2eproto;
};
// -------------------------------------------------------------------

class NftTraffic final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:procmon.NftTraffic) */ {
 public:
  inline NftTraffic() : NftTraffic(nullptr) {}
  ~NftTraffic() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NftTraffic(
      ::google::protobuf::internal::ConstantInitialized);

  inline NftTraffic(const NftTraffic& from) : NftTraffic(nullptr, from) {}
  inline NftTraffic(NftTraffic&& from) noexcept
      : NftTraffic(nullptr, std::move(from)) {}
  inline NftTraffic& operator=(const NftTraffic& from) {
    CopyFrom(from);
    return *this;
  }
  inline NftTraffic& operator=(NftTraffic&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NftTraffic& default_instance() {
    return *internal_default_instance();
  }
  static inline const NftTraffic* internal_default_instance() {
    return reinterpret_cast<const NftTraffic*>(
        &_NftTraffic_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(NftTraffic& a, NftTraffic& b) { a.Swap(&b); }
  inline void Swap(NftTraffic* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NftTraffic* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NftTraffic* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NftTraffic>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NftTraffic& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NftTraffic& from) { NftTraffic::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NftTraffic* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "procmon.NftTraffic"; }

 protected:
  explicit NftTraffic(::google::protobuf::Arena* arena);
  NftTraffic(::google::protobuf::Arena* arena, const NftTraffic& from);
  NftTraffic(::google::protobuf::Arena* arena, NftTraffic&& from) noexcept
      : NftTraffic(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampFieldNumber = 1,
    kIpAddressFieldNumber = 2,
    kMacAddressFieldNumber = 3,
    kPacketsFieldNumber = 4,
    kBytesFieldNumber = 5,
  };
  // string timestamp = 1;
  void clear_timestamp() ;
  const std::string& timestamp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timestamp(Arg_&& arg, Args_... args);
  std::string* mutable_timestamp();
  PROTOBUF_NODISCARD std::string* release_timestamp();
  void set_allocated_timestamp(std::string* value);

  private:
  const std::string& _internal_timestamp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timestamp(
      const std::string& value);
  std::string* _internal_mutable_timestamp();

  public:
  // string ip_address = 2;
  void clear_ip_address() ;
  const std::string& ip_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip_address(Arg_&& arg, Args_... args);
  std::string* mutable_ip_address();
  PROTOBUF_NODISCARD std::string* release_ip_address();
  void set_allocated_ip_address(std::string* value);

  private:
  const std::string& _internal_ip_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip_address(
      const std::string& value);
  std::string* _internal_mutable_ip_address();

  public:
  // string mac_address = 3;
  void clear_mac_address() ;
  const std::string& mac_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mac_address(Arg_&& arg, Args_... args);
  std::string* mutable_mac_address();
  PROTOBUF_NODISCARD std::string* release_mac_address();
  void set_allocated_mac_address(std::string* value);

  private:
  const std::string& _internal_mac_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mac_address(
      const std::string& value);
  std::string* _internal_mutable_mac_address();

  public:
  // int32 packets = 4;
  void clear_packets() ;
  ::int32_t packets() const;
  void set_packets(::int32_t value);

  private:
  ::int32_t _internal_packets() const;
  void _internal_set_packets(::int32_t value);

  public:
  // int32 bytes = 5;
  void clear_bytes() ;
  ::int32_t bytes() const;
  void set_bytes(::int32_t value);

  private:
  ::int32_t _internal_bytes() const;
  void _internal_set_bytes(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:procmon.NftTraffic)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NftTraffic_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NftTraffic& from_msg);
    ::google::protobuf::internal::ArenaStringPtr timestamp_;
    ::google::protobuf::internal::ArenaStringPtr ip_address_;
    ::google::protobuf::internal::ArenaStringPtr mac_address_;
    ::int32_t packets_;
    ::int32_t bytes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_procmon_2eproto;
};
// -------------------------------------------------------------------

class NftTrafficResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:procmon.NftTrafficResponse) */ {
 public:
  inline NftTrafficResponse() : NftTrafficResponse(nullptr) {}
  ~NftTrafficResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NftTrafficResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NftTrafficResponse(const NftTrafficResponse& from) : NftTrafficResponse(nullptr, from) {}
  inline NftTrafficResponse(NftTrafficResponse&& from) noexcept
      : NftTrafficResponse(nullptr, std::move(from)) {}
  inline NftTrafficResponse& operator=(const NftTrafficResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NftTrafficResponse& operator=(NftTrafficResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NftTrafficResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NftTrafficResponse* internal_default_instance() {
    return reinterpret_cast<const NftTrafficResponse*>(
        &_NftTrafficResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NftTrafficResponse& a, NftTrafficResponse& b) { a.Swap(&b); }
  inline void Swap(NftTrafficResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NftTrafficResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NftTrafficResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NftTrafficResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NftTrafficResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NftTrafficResponse& from) { NftTrafficResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NftTrafficResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "procmon.NftTrafficResponse"; }

 protected:
  explicit NftTrafficResponse(::google::protobuf::Arena* arena);
  NftTrafficResponse(::google::protobuf::Arena* arena, const NftTrafficResponse& from);
  NftTrafficResponse(::google::protobuf::Arena* arena, NftTrafficResponse&& from) noexcept
      : NftTrafficResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNftTrafficFieldNumber = 1,
  };
  // repeated .procmon.NftTraffic nft_traffic = 1;
  int nft_traffic_size() const;
  private:
  int _internal_nft_traffic_size() const;

  public:
  void clear_nft_traffic() ;
  ::procmon::NftTraffic* mutable_nft_traffic(int index);
  ::google::protobuf::RepeatedPtrField<::procmon::NftTraffic>* mutable_nft_traffic();

  private:
  const ::google::protobuf::RepeatedPtrField<::procmon::NftTraffic>& _internal_nft_traffic() const;
  ::google::protobuf::RepeatedPtrField<::procmon::NftTraffic>* _internal_mutable_nft_traffic();
  public:
  const ::procmon::NftTraffic& nft_traffic(int index) const;
  ::procmon::NftTraffic* add_nft_traffic();
  const ::google::protobuf::RepeatedPtrField<::procmon::NftTraffic>& nft_traffic() const;
  // @@protoc_insertion_point(class_scope:procmon.NftTrafficResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NftTrafficResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NftTrafficResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::procmon::NftTraffic > nft_traffic_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_procmon_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StatusRequest

// -------------------------------------------------------------------

// StatusResponse

// double cpu_usage = 1;
inline void StatusResponse::clear_cpu_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = 0;
}
inline double StatusResponse::cpu_usage() const {
  // @@protoc_insertion_point(field_get:procmon.StatusResponse.cpu_usage)
  return _internal_cpu_usage();
}
inline void StatusResponse::set_cpu_usage(double value) {
  _internal_set_cpu_usage(value);
  // @@protoc_insertion_point(field_set:procmon.StatusResponse.cpu_usage)
}
inline double StatusResponse::_internal_cpu_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cpu_usage_;
}
inline void StatusResponse::_internal_set_cpu_usage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = value;
}

// double mem_usage = 2;
inline void StatusResponse::clear_mem_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mem_usage_ = 0;
}
inline double StatusResponse::mem_usage() const {
  // @@protoc_insertion_point(field_get:procmon.StatusResponse.mem_usage)
  return _internal_mem_usage();
}
inline void StatusResponse::set_mem_usage(double value) {
  _internal_set_mem_usage(value);
  // @@protoc_insertion_point(field_set:procmon.StatusResponse.mem_usage)
}
inline double StatusResponse::_internal_mem_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mem_usage_;
}
inline void StatusResponse::_internal_set_mem_usage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mem_usage_ = value;
}

// double total_memory = 3;
inline void StatusResponse::clear_total_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_memory_ = 0;
}
inline double StatusResponse::total_memory() const {
  // @@protoc_insertion_point(field_get:procmon.StatusResponse.total_memory)
  return _internal_total_memory();
}
inline void StatusResponse::set_total_memory(double value) {
  _internal_set_total_memory(value);
  // @@protoc_insertion_point(field_set:procmon.StatusResponse.total_memory)
}
inline double StatusResponse::_internal_total_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_memory_;
}
inline void StatusResponse::_internal_set_total_memory(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_memory_ = value;
}

// double free_memory = 4;
inline void StatusResponse::clear_free_memory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.free_memory_ = 0;
}
inline double StatusResponse::free_memory() const {
  // @@protoc_insertion_point(field_get:procmon.StatusResponse.free_memory)
  return _internal_free_memory();
}
inline void StatusResponse::set_free_memory(double value) {
  _internal_set_free_memory(value);
  // @@protoc_insertion_point(field_set:procmon.StatusResponse.free_memory)
}
inline double StatusResponse::_internal_free_memory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.free_memory_;
}
inline void StatusResponse::_internal_set_free_memory(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.free_memory_ = value;
}

// string net_interface = 5;
inline void StatusResponse::clear_net_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_interface_.ClearToEmpty();
}
inline const std::string& StatusResponse::net_interface() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:procmon.StatusResponse.net_interface)
  return _internal_net_interface();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StatusResponse::set_net_interface(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_interface_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:procmon.StatusResponse.net_interface)
}
inline std::string* StatusResponse::mutable_net_interface() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_net_interface();
  // @@protoc_insertion_point(field_mutable:procmon.StatusResponse.net_interface)
  return _s;
}
inline const std::string& StatusResponse::_internal_net_interface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.net_interface_.Get();
}
inline void StatusResponse::_internal_set_net_interface(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_interface_.Set(value, GetArena());
}
inline std::string* StatusResponse::_internal_mutable_net_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.net_interface_.Mutable( GetArena());
}
inline std::string* StatusResponse::release_net_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:procmon.StatusResponse.net_interface)
  return _impl_.net_interface_.Release();
}
inline void StatusResponse::set_allocated_net_interface(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_interface_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.net_interface_.IsDefault()) {
          _impl_.net_interface_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:procmon.StatusResponse.net_interface)
}

// int64 rx_bytes = 6;
inline void StatusResponse::clear_rx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rx_bytes_ = ::int64_t{0};
}
inline ::int64_t StatusResponse::rx_bytes() const {
  // @@protoc_insertion_point(field_get:procmon.StatusResponse.rx_bytes)
  return _internal_rx_bytes();
}
inline void StatusResponse::set_rx_bytes(::int64_t value) {
  _internal_set_rx_bytes(value);
  // @@protoc_insertion_point(field_set:procmon.StatusResponse.rx_bytes)
}
inline ::int64_t StatusResponse::_internal_rx_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rx_bytes_;
}
inline void StatusResponse::_internal_set_rx_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rx_bytes_ = value;
}

// int64 tx_bytes = 7;
inline void StatusResponse::clear_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_ = ::int64_t{0};
}
inline ::int64_t StatusResponse::tx_bytes() const {
  // @@protoc_insertion_point(field_get:procmon.StatusResponse.tx_bytes)
  return _internal_tx_bytes();
}
inline void StatusResponse::set_tx_bytes(::int64_t value) {
  _internal_set_tx_bytes(value);
  // @@protoc_insertion_point(field_set:procmon.StatusResponse.tx_bytes)
}
inline ::int64_t StatusResponse::_internal_tx_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_bytes_;
}
inline void StatusResponse::_internal_set_tx_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_ = value;
}

// double d_speed = 8;
inline void StatusResponse::clear_d_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_speed_ = 0;
}
inline double StatusResponse::d_speed() const {
  // @@protoc_insertion_point(field_get:procmon.StatusResponse.d_speed)
  return _internal_d_speed();
}
inline void StatusResponse::set_d_speed(double value) {
  _internal_set_d_speed(value);
  // @@protoc_insertion_point(field_set:procmon.StatusResponse.d_speed)
}
inline double StatusResponse::_internal_d_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.d_speed_;
}
inline void StatusResponse::_internal_set_d_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.d_speed_ = value;
}

// double u_speed = 9;
inline void StatusResponse::clear_u_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u_speed_ = 0;
}
inline double StatusResponse::u_speed() const {
  // @@protoc_insertion_point(field_get:procmon.StatusResponse.u_speed)
  return _internal_u_speed();
}
inline void StatusResponse::set_u_speed(double value) {
  _internal_set_u_speed(value);
  // @@protoc_insertion_point(field_set:procmon.StatusResponse.u_speed)
}
inline double StatusResponse::_internal_u_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.u_speed_;
}
inline void StatusResponse::_internal_set_u_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.u_speed_ = value;
}

// -------------------------------------------------------------------

// NftTrafficRequest

// -------------------------------------------------------------------

// NftTrafficResponse

// repeated .procmon.NftTraffic nft_traffic = 1;
inline int NftTrafficResponse::_internal_nft_traffic_size() const {
  return _internal_nft_traffic().size();
}
inline int NftTrafficResponse::nft_traffic_size() const {
  return _internal_nft_traffic_size();
}
inline void NftTrafficResponse::clear_nft_traffic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nft_traffic_.Clear();
}
inline ::procmon::NftTraffic* NftTrafficResponse::mutable_nft_traffic(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:procmon.NftTrafficResponse.nft_traffic)
  return _internal_mutable_nft_traffic()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::procmon::NftTraffic>* NftTrafficResponse::mutable_nft_traffic()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:procmon.NftTrafficResponse.nft_traffic)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nft_traffic();
}
inline const ::procmon::NftTraffic& NftTrafficResponse::nft_traffic(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:procmon.NftTrafficResponse.nft_traffic)
  return _internal_nft_traffic().Get(index);
}
inline ::procmon::NftTraffic* NftTrafficResponse::add_nft_traffic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::procmon::NftTraffic* _add = _internal_mutable_nft_traffic()->Add();
  // @@protoc_insertion_point(field_add:procmon.NftTrafficResponse.nft_traffic)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::procmon::NftTraffic>& NftTrafficResponse::nft_traffic() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:procmon.NftTrafficResponse.nft_traffic)
  return _internal_nft_traffic();
}
inline const ::google::protobuf::RepeatedPtrField<::procmon::NftTraffic>&
NftTrafficResponse::_internal_nft_traffic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nft_traffic_;
}
inline ::google::protobuf::RepeatedPtrField<::procmon::NftTraffic>*
NftTrafficResponse::_internal_mutable_nft_traffic() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nft_traffic_;
}

// -------------------------------------------------------------------

// NftTraffic

// string timestamp = 1;
inline void NftTraffic::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.ClearToEmpty();
}
inline const std::string& NftTraffic::timestamp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:procmon.NftTraffic.timestamp)
  return _internal_timestamp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NftTraffic::set_timestamp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:procmon.NftTraffic.timestamp)
}
inline std::string* NftTraffic::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:procmon.NftTraffic.timestamp)
  return _s;
}
inline const std::string& NftTraffic::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_.Get();
}
inline void NftTraffic::_internal_set_timestamp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.Set(value, GetArena());
}
inline std::string* NftTraffic::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.timestamp_.Mutable( GetArena());
}
inline std::string* NftTraffic::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:procmon.NftTraffic.timestamp)
  return _impl_.timestamp_.Release();
}
inline void NftTraffic::set_allocated_timestamp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timestamp_.IsDefault()) {
          _impl_.timestamp_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:procmon.NftTraffic.timestamp)
}

// string ip_address = 2;
inline void NftTraffic::clear_ip_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_.ClearToEmpty();
}
inline const std::string& NftTraffic::ip_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:procmon.NftTraffic.ip_address)
  return _internal_ip_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NftTraffic::set_ip_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:procmon.NftTraffic.ip_address)
}
inline std::string* NftTraffic::mutable_ip_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip_address();
  // @@protoc_insertion_point(field_mutable:procmon.NftTraffic.ip_address)
  return _s;
}
inline const std::string& NftTraffic::_internal_ip_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_address_.Get();
}
inline void NftTraffic::_internal_set_ip_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_.Set(value, GetArena());
}
inline std::string* NftTraffic::_internal_mutable_ip_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ip_address_.Mutable( GetArena());
}
inline std::string* NftTraffic::release_ip_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:procmon.NftTraffic.ip_address)
  return _impl_.ip_address_.Release();
}
inline void NftTraffic::set_allocated_ip_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_address_.IsDefault()) {
          _impl_.ip_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:procmon.NftTraffic.ip_address)
}

// string mac_address = 3;
inline void NftTraffic::clear_mac_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mac_address_.ClearToEmpty();
}
inline const std::string& NftTraffic::mac_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:procmon.NftTraffic.mac_address)
  return _internal_mac_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NftTraffic::set_mac_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mac_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:procmon.NftTraffic.mac_address)
}
inline std::string* NftTraffic::mutable_mac_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mac_address();
  // @@protoc_insertion_point(field_mutable:procmon.NftTraffic.mac_address)
  return _s;
}
inline const std::string& NftTraffic::_internal_mac_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mac_address_.Get();
}
inline void NftTraffic::_internal_set_mac_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mac_address_.Set(value, GetArena());
}
inline std::string* NftTraffic::_internal_mutable_mac_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.mac_address_.Mutable( GetArena());
}
inline std::string* NftTraffic::release_mac_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:procmon.NftTraffic.mac_address)
  return _impl_.mac_address_.Release();
}
inline void NftTraffic::set_allocated_mac_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mac_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mac_address_.IsDefault()) {
          _impl_.mac_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:procmon.NftTraffic.mac_address)
}

// int32 packets = 4;
inline void NftTraffic::clear_packets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packets_ = 0;
}
inline ::int32_t NftTraffic::packets() const {
  // @@protoc_insertion_point(field_get:procmon.NftTraffic.packets)
  return _internal_packets();
}
inline void NftTraffic::set_packets(::int32_t value) {
  _internal_set_packets(value);
  // @@protoc_insertion_point(field_set:procmon.NftTraffic.packets)
}
inline ::int32_t NftTraffic::_internal_packets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packets_;
}
inline void NftTraffic::_internal_set_packets(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packets_ = value;
}

// int32 bytes = 5;
inline void NftTraffic::clear_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_ = 0;
}
inline ::int32_t NftTraffic::bytes() const {
  // @@protoc_insertion_point(field_get:procmon.NftTraffic.bytes)
  return _internal_bytes();
}
inline void NftTraffic::set_bytes(::int32_t value) {
  _internal_set_bytes(value);
  // @@protoc_insertion_point(field_set:procmon.NftTraffic.bytes)
}
inline ::int32_t NftTraffic::_internal_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bytes_;
}
inline void NftTraffic::_internal_set_bytes(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace procmon


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_procmon_2eproto_2epb_2eh
